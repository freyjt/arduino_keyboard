PROJECT:    arduino_keyboard
PURPOSE:    This project takes the input from an AT Protocol keyboad
            and decodes it, outputing the keystrokes through an Arduino leonardo
            to USB, making outdated keyboards appear to run natively.
LISCENSE:   gnu. see LISCENSE file in project for details
PROGRAMMER: Joshua T. Frey

HOW TO USE: Key connector pinouts can be easily foud online.
            There are 4 used lines on the connector (whether 5 or 6 pin DIN)

            +5v - On the keyboards I've tested this can be connected directly to
                  the voltage from the arduino.
            CLK - The keyboard generates it's on clock signal for data transfer
                  the pin for this connection is obvious in the code, and should
                  be checked and adjusted accordingly.
                  We also need to wire a transistor controlled from the ground_clock
                  (in code) pin to the clock and ground. 
            DATA- same method as clock, without a transistor.
            GND - can be connected straight to arduino ground

            Simply hook everything up and program the MCU with an Arduino IDE compatible
            compiler, your keyboard should work.

KNOWN ISSUES:  Pause Break is not decoding yet, but does cause a release all sequence when
               pressed, so can sometimes act as a keyboard reset, without resetting the MCU.

               Certain keys will occasionally become unresponsive, pause break often clears
               the issue.
               
               Full two way communication between the arduino and keyboard is not implemented.
               As such, the lock lights will not turn on with the lock. Also, many errors are 
               fatal and will require an MCU restart.